#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/slack/functions"

case "$1" in

  help | slack:help)
    help_content_func() {
      declare desc="return help_content string"
      cat<<help_content
    slack:set [app] <webhook_url>, Set Slack WebHook URL
    slack:set <webhook_url>, Set Global Slack WebHook URL
    slack:clear [app], Clears Slack WebHook URL
    slack:get [app], Display Slack WebHook URL
help_content
    }
    if [[ $1 = "slack:help" ]] ; then
      echo -e 'Dokku Slack'
      echo ''
      echo 'Usage:'
      echo ''
      echo '  $ dokku slack:set [app] <webhook_url>       Set Slack WebHook URL'
      echo '  $ dokku slack:set <webhook_url>             Set Global Slack WebHook URL'
      echo '  $ dokku slack:clear [app]                   Clears Slack WebHook URL'
      echo '  $ dokku slack:get [app]                     Display Slack WebHook URL'
      echo ''
    else
      help_content_func
    fi
    ;;
    
  slack:set)
    SLACK_ROOT=$(get_slack_root "$2")
    WEBHOOK=$(get_webhook "$2" "$3")
    [[ -z $WEBHOOK ]] && echo "Please specify at least a webhook URL" && exit 1
    [[ -z $(is_webhook "$WEBHOOK") ]] && echo "Webhook has to be an URL" && exit 1
    echo "$WEBHOOK" > "$SLACK_ROOT/SLACK_URL"
    ;;

  slack:clear)
    SLACK_ROOT=$(get_slack_root "$2")
    rm "$SLACK_ROOT/SLACK_URL"
    ;;

  slack:get)
    echo $(get_slack_url "$2" "$3")
    ;;
    
  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;
esac
